#define DR_CODE_mapbonus NAME IMAGE
    {TAG mapbonus (name,image={NAME},{IMAGE})}
#enddef
#define DR_definition_MAPBONUS
#list of common terrain types which come in at different heights, from highest to lowest
#		Plains		Hills	Mountain	Forest		Villages	Castles		Water	Specials
# 
# Desert    	Rd, Dd, Ds	Hd	Md (^Xm)	^Ftd		Vd{a,t}		Kd,Cd/Kdr,Cdr	Wwt,Wot	^Do Oasis, ^Dr, Dc, Edp, Edpp, Esd
# Frozen	Aa		Ha	Ms (^Xm)	Fda,Fma,Fpa	V{o,e,h,c,a,l}a	K{e,o,h}a	Ai
# Spring(dread)
# Summer(norm)	Gg, Gs
# Fall
# Cave
# Jungle
# Swamp
# 
# Embellishments:	^Efm	^Gvs	^Es	^Em	^Emf	^Edp	^Edpp	^Wm	^Ecf	Esd	Ewl	Ews		Dr
# 			Flower	Farms	Stone	Mushes	MushFar PlntBon Plant	Windmil	Fire	Stone	Lily	FlowerLily	Rubbles
# wild, civilised, 

(Uh)	Underground Hill
(Uu)	Underground
(Xu)	Underground Impassable 
(Mm^Xm)	Mountain    Impassable
(Mm)	Mountain
(Hh)	Hill
(Gg)	Grass
(Ss)	Swamp	(Ds)	Desert
(Ww)	Water Shallow
(Wo)	Water Deep

(Ai)	Ice
(Aa)	Snow

(Gs^Fp)	Forest on Grass (Gg?)
(Hh^Fp)	Forest on Hill
(Aa^Fpa)Forest Frozen on Snow
	Forest Frozen on Hill Snow
(Gs^Ft)	Forest Tropical on Grass
(Hh^Ft)	Forest Tropical on Hill

(Uu^Uf)	Fungus on Underground
(Re)  	Dirt (Rd, Rr, Rb)
(Gg^Fet)	Great Tree

    {DR_CODE_mapbonus	(^)	("Tavern")		(terrain/village/log-cabin.png)		bonus_origin}
    {DR_CODE_mapbonus	(^)	("Windmill")		(scenery/windmill-01.png)		{RANDOM (bonus_origin,bonus_item,bonus_castle,bonus_gold)}}
    {DR_CODE_mapbonus	(^)	("Temple")		(scenery/temple1.png)			(resurect, heal, }
    {DR_CODE_mapbonus	(^)	("Blacksmith")		(scenery/tent-shop-weapons.png)		bonus_item}
    {DR_CODE_mapbonus	(^)	("Merchant")		(scenery/tent-fancy-red.png)		bonus_item}
    {DR_CODE_mapbonus	(^)	("Camp")		(scenery/fire1.png)			bonus_train}
    {DR_CODE_mapbonus	(^)	("Dungeon")		(scenery/dwarven-doors-closed.png)	bonus_castle}
    {DR_CODE_mapbonus	(^)	("Crypt")		(scenery/monolith2.png)			bonus_item}
    {DR_CODE_mapbonus	(^)	("Wishing Well")	(scenery/well.png)			{DR_MENU_call} }
    {DR_CODE_mapbonus	(^)	("Shipwreck")		(scenery/wreck.png)			bonus_gold}
    {DR_CODE_mapbonus	(*^F*)	("Chest")		(items/chest.png)			bonus_gold}
#enddef

# spawn the different map bonus around
#define DR_BONUS_spawn NUMBER
{REPEAT {NUMBER} (
    {VARIABLE I $REPEAT_i}                                                             	# just to remove some bloat
    {RANDOM 0..2}                                                  	                # get the bonus random
    {VARIABLE  ("bonus[$I].type") ("$random")}                                  	# set bonus type
    {RANDOM 0.."$($tiles.length-1)"}                                                  	# get a random tile
    {VARIABLE  ("bonus[$I].x") ("$tiles[$random].x")}                                 	# set bonus position
    {VARIABLE  ("bonus[$I].y") ("$tiles[$random].y")}                                  	# set bonus position

    [switch]
        variable=bonus[$I].type
        # Prisoner
        {CASE_IS (1) ( 
        # random hero from random faction
        {VARIABLE_OP fact_no rand (0.."$($faction.length|-1)")}                         # get a random faction for the hero
        {VARIABLE_OP levl_no rand 0..$scenario}						# determine it's level based on scenario number
        {VARIABLE_OP levl_no divide 3}							# divide by 3 (you begin to get some level 2 on map 6)
        {VARIABLE_OP levl_no round ceil}						# round it down like in good ole wesnoth
        {VARIABLE_OP hero_no rand (0.."$($faction[$fact_no|].lvl[$levl_no|].unit.length|-1)")}
        # place on map
        {TAG item (x,y,image=$tiles[$random].x,$tiles[$random].y,"$faction[$fact_no|].lvl[$levl_no|].unit[$hero_no|].image|~RC(magenta>white)")}
        {TAG item (x,y,image=$tiles[$random].x,$tiles[$random].y,"items/cage.png~CROP(5,5,62,62)~SCALE(72,72)~O(84%)")}
        # save type
        {VARIABLE bonus[$I].element ("$faction[$fact_no|].lvl[$levl_no|].unit[$hero_no|].type")}
        {VARIABLE bonus[$I].event (wc spawn hero)}
        )}

        # Artifact
        {CASE_IS (2) (
        {VARIABLE_OP bonus[$I].element rand (0.."$($artifact.length|-1)")}                             
        {TAG item (x,y,image=$tiles[$random].x,$tiles[$random].y,"$artifact[$bonus[$I].element].image")}
        {VARIABLE bonus[$I].event (bonus_gold)} # ok, broken for now
        )}

        # Gold or whatever
        {CASE_IS (0) ( 
        {VARIABLE_OP bonus[$I].element rand (10.."$gold_bonus")}
        {TAG item (x,y,image=$tiles[$random].x,$tiles[$random].y,"items/gold-coins-small.png")}
        {VARIABLE bonus[$I].event (bonus_gold)}
        )}
    [/switch]


    # create the moveto event on bonus
    [event]
	name=moveto
	first_time_only=yes
        delayed_variable_substitution=no
	[filter]
	    side=1,2,3,4,5,6
            [and]
                x,y=$bonus[$I].x,$bonus[$I].y
            [/and]
	[/filter]
        {VARIABLE spawn.type ($bonus[$I].element)}
        {VARIABLE spawn.x ($bonus[$I].x)}
        {VARIABLE spawn.y ($bonus[$I].y)}
        {TAG fire_event  (name=wc spawn hero)}
	{TAG remove_item (x,y=$bonus[$I].x,$bonus[$I].y)}
        {TAG message     (type,message=$bonus[$I].element|,_"Thank you for delivering me from this miserable living, I'll give you my life in exchange.")}
    [/event]
)}
{CLEAR_VARIABLE fact_no}
{CLEAR_VARIABLE hero_no}
{CLEAR_VARIABLE levl_no}
{CLEAR_VARIABLE tiles}
#enddef

# Put a bonus artifact on the map and create the assossiate moveto event
#define DR_BONUS_ITEM_SPAWN ITEM XX YY
    {TAG item (x,y,image={XX},{YY},${ITEM}.image)}
    # Teleport hack, delay variable substitution
    {VARIABLE teleport_unit.id "$|teleport_unit.id"}
    {VARIABLE teleport_unit.side "$|teleport_unit.side"}
    [event]
        name=moveto
        first_time_only=yes
        delayed_variable_substitution=no
	{TAG filter    		(x,y,side={XX},{YY},1,2,3,4,5,6)} 
        {TAG insert_tag 	(name,variable=object,{ITEM})}
        {TAG remove_item 	(x,y={XX},{YY})}   
    [/event]
#   {CLEAR_VARIABLE teleport_unit}
#enddef


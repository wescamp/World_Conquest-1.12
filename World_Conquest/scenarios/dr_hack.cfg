# Set a custom random time of day without mp oos
#define DR_HACK_random_tod
    # Set a default random timezone
    {RANDOM 1..6}
    [switch]
        variable=random
        #case 1 - leave default schedule
        {CASE_IS (2) ( [replace_schedule] {DEFAULT_SCHEDULE_MORNING} [/replace_schedule] )}
        {CASE_IS (3) ( [replace_schedule] {DEFAULT_SCHEDULE_AFTERNOON} [/replace_schedule] )}
        {CASE_IS (4) ( [replace_schedule] {DEFAULT_SCHEDULE_DUSK} [/replace_schedule] )}
        {CASE_IS (5) ( [replace_schedule] {DEFAULT_SCHEDULE_FIRST_WATCH} [/replace_schedule] )}
        {CASE_IS (6) ( [replace_schedule] {DEFAULT_SCHEDULE_SECOND_WATCH} [/replace_schedule] )}
    [/switch]
    {CLEAR_VARIABLE random}
#enddef

# fills in the artifacts and factions information
#define DR_HACK_fixstruct
    # Set the artifacts description based from single table
    {FOREACH artifact I}
        {VARIABLE artifact[$I].description ("$artifact[$I].cannot_use_message:")}
        {FOREACH artifact[$I].desc D}
            {VARIABLE artifact[$I].description ("$artifact[$I].description
    $artifact[$I].desc[$D].string")}
        {NEXT D}
	{CLEAR_VARIABLE artifact[$I].desc}
    {NEXT I}
    # fill data structure of factions and units
    # we want to extract the image associated with a particular unit
    {FOREACH faction I}
        {FOR QQ 0 less_than 5 add 1 (
        	{DR_split ("faction[$I].lvl[$QQ].unit")  ("$faction[$I].lvl$QQ")        (id)}
        	{LUA_GRAP_UNIT (faction[$I|].lvl[$QQ|].unit)}
        )}
    {NEXT I}
#enddef

# AI switch for more than 9 sides #################################		
#define DR_HACK_ai_leader_switch
    # at the end of turn, set back golden crown so leaders behave as such on player's turn
    [event]
        name=turn refresh
        first_time_only=no
        [filter]
            side=7,8,9
        [/filter]
        {MODIFY_UNIT (role=leader) (canrecruit) (yes)}
        {VARIABLE leader_switch_hack 0}
    [/event]
    # switch leaders upon new recruitment (crab should fix this in 1.9)
    [event]
        name=recruit
        first_time_only=no
        [filter]
            side=7,8,9
        [/filter]
        # store the leaders
        [store_unit]
            [filter]
                role=leader
                side=$unit.side
            [/filter]
            variable=leader_list
            kill=yes
        [/store_unit]

        # increase counter, restart if max reach (cyclic buffer)
        {VARIABLE_OP leader_switch_hack add 1}
        {IF_VAR 	(leader_switch_hack)	(greater_than_equal_to)	($leader_list.length)	(
            [then]
                {VARIABLE leader_switch_hack 0}
            [/then]
        )}

        {FOREACH leader_list I}
            {IF_VAR 	(leader_switch_hack)	(not_equals)	($I)	(
                [then]
                    [set_variable]
                        name=leader_list[$I].canrecruit
                        value=no
                    [/set_variable]
                [/then]
                [else]
                    [set_variable]
                        name=leader_list[$I].canrecruit
                        value=yes
                    [/set_variable]
                [/else]
            )}
            [set_variable]
                name=leader_list[$I].moves
                value=0
            [/set_variable]
            [unstore_unit]
                variable=leader_list[$I]
                find_vacant=no
            [/unstore_unit]
        {NEXT I}

        {CLEAR_VARIABLE leader_list}
        {CLEAR_VARIABLE I}
    [/event]
#enddef

#################################################################### extra definition else it is ignored when no ghouls are around
#define DR_HACK_FEEDING_SPECIAL
    [event]
	name=die
	first_time_only=no        
	[filter]
	    [not]
		[filter_wml]
		    [status]
			not_living="yes"
		    [/status]
		[/filter_wml]
	    [/not]
	[/filter]        
	[filter_second]
	    ability=feeding_special
	[/filter_second]        
	[unstore_unit]
	    variable=second_unit
	    {COLOR_HEAL}
	    text= _ "+1 max HP"
	    find_vacant=no
	[/unstore_unit]        
	[object]
	    silent=yes
	    duration=forever
            [filter]
		x,y=$x2,$y2
	    [/filter]            
	    [effect]
		apply_to=hitpoints
		increase_total=1
		increase=1
	    [/effect]
	[/object]
    [/event]
#enddef

